package orders.model;

import jakarta.persistence.*;
import java.math.BigDecimal;
import java.time.Instant;

/**
 * JPA entity representing an order in the online store domain.
 * <p>
 * This is a minimal model containing free-form notes, a status label,
 * a monetary total, and a creation timestamp. For a real store you would
 * typically add items, customer data, payment/shipping info, etc.
 * </p>
 */
@Entity
@Table(name = "orders")
public class Order {

    /**
     * Surrogate primary key, generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * Optional human-readable notes about this order.
     */
    @Column(length = 255)
    private String notes;

    /**
     * Order status label (e.g., NEW, PAID, SHIPPED).
     */
    @Column(length = 50)
    private String status;

    /**
     * Total amount of the order. Uses high-precision {@link BigDecimal}.
     */
    @Column(precision = 19, scale = 2)
    private BigDecimal total;

    /**
     * Creation timestamp; set once when the entity is first persisted.
     */
    @Column(nullable = false, updatable = false)
    private Instant createdAt = Instant.now();

    // --- Getters & setters ---

    /** @return the primary key */
    public Long getId() { return id; }

    /** @return free-form notes */
    public String getNotes() { return notes; }

    /** @param notes free-form notes */
    public void setNotes(String notes) { this.notes = notes; }

    /** @return status label */
    public String getStatus() { return status; }

    /** @param status status label */
    public void setStatus(String status) { this.status = status; }

    /** @return monetary total */
    public BigDecimal getTotal() { return total; }

    /** @param total monetary total */
    public void setTotal(BigDecimal total) { this.total = total; }

    /** @return creation timestamp */
    public Instant getCreatedAt() { return createdAt; }

    /** @param createdAt creation timestamp (normally set automatically) */
    public void setCreatedAt(Instant createdAt) { this.createdAt = createdAt; }
}
